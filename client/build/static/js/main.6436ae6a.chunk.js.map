{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","utils/mutations.js","pages/Login.js","pages/NoMatch.js","utils/queries.js","components/ReactionList/index.js","pages/SingleComment.js","components/CommentList/index.js","components/FriendList/index.js","pages/Profile.js","pages/Signup.js","components/About/index.js","pages/About.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","class","LOGIN_USER","gql","ADD_USER","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleChange","target","name","value","handleFormSubmit","variables","data","console","onSubmit","placeholder","type","id","onChange","NoMatch","src","alt","QUERY_COMMENTS","QUERY_COMMENT","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","ReactionList","reactions","map","reaction","reactionBody","username","style","fontWeight","createdAt","_id","SingleComment","commentId","useParams","useQuery","loading","comment","commentText","reactionCount","CommentList","comments","title","length","FriendList","friendCount","friends","friend","Profile","userParam","user","me","getProfile","Signup","addUser","About","borderColour","borderWidth","borderRadius","borderType","innerPadding","topPosition","topOffset","topGap","rightPosition","rightOffset","rightGap","Home","userData","log","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6436ae6a.chunk.js","sourcesContent":["import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link to=\"/\">\n          <h1>NIM Portal</h1>\n        </Link>\n\n        <nav className=\"text-center\">\n          {Auth.loggedIn() ? (\n            <>\n              <Link to=\"/about\">About Us</Link>\n              <Link to=\"/profile\">Me</Link>\n              <a href=\"/\" onClick={logout}>\n                Logout\n              </a>\n            </>\n          ) : (\n            <>\n              <Link to=\"/about\">About Us</Link>\n              <Link to=\"/login\">Login</Link>\n              <Link to=\"/signup\">Signup</Link>\n            </>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container\">&copy;2022 by NIM Portal</div>\n      <div className=\"container\">Contact Us at <a class=\"footer-link\" href=\"mailto:support@nimportal.com\">support@nimportal.com</a> or by phone at <a class=\"footer-link\" href=\"tel:3365555555\">336-555-5555.</a></div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Login</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Login failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div class=\"no-match\">\n      Oops, we couldn't find that page.\n      <div class=\"oops\">\n        <img src=\"https://64.media.tumblr.com/95833a0b7ad4df467399e04b72954bc0/797b50d1451b8db2-d0/s540x810/c87ec086a073bacb72cae459890434330c9c4534.gifv\" alt=\"wall-e sad face\" ></img>\n      </div>\n    </div>\n  );\n};\n\nexport default NoMatch;","import { gql } from '@apollo/client';\n\nexport const QUERY_COMMENTS = gql`\n  query comments($username: String) {\n    comments(username: $username) {\n      _id\n      commentText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_COMMENT = gql`\n  query comment($id: ID!) {\n    comment(_id: $id) {\n      _id\n      commentText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n      comments {\n        _id\n        commentText\n        createdAt\n        reactionCount\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      comments {\n        _id\n        commentText\n        createdAt\n        reactionCount\n        reactions {\n          _id\n          createdAt\n          reactionBody\n          username\n        }\n      }\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME_BASIC = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ReactionList = ({ reactions }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n    <div className=\"card-header\">\r\n        <span className=\"text-light\">Reactions</span>\r\n    </div>\r\n    <div className=\"card-body\">\r\n        {reactions &&\r\n        reactions.map(reaction => (\r\n            <p className=\"pill mb-3\" key={reaction._id}>\r\n            {reaction.reactionBody} {'// '}\r\n            <Link to={`/profile/${reaction.username}`} style={{ fontWeight: 700 }}>\r\n                {reaction.username} on {reaction.createdAt}\r\n            </Link>\r\n            </p>\r\n        ))}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactionList;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_COMMENT } from '../utils/queries';\nimport ReactionList from '../components/ReactionList';\n\nconst SingleComment = (props) => {\n  const { id: commentId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_COMMENT, {\n    variables: { id: commentId }\n  });\n\n  const comment = data?.comment || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  \n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {comment.username}\n          </span>{' '}\n          comment on {comment.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{comment.commentText}</p>\n        </div>\n      </div>\n      {comment.reactionCount > 0 && <ReactionList reactions={comment.reactions} />}\n    </div>\n  );\n};\n\nexport default SingleComment;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst CommentList = ({ comments, title }) => {\n  if (!comments.length) {\n    return <h3>No Comments Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {comments &&\n        comments.map((comment) => (\n          <div key={comment._id} className=\"card mb-3\">\n            <p className=\"card-header\">\n              <Link\n                to={`/profile/${comment.username}`}\n                style={{ fontWeight:700 }}\n                className=\"text-light\"\n              >\n              {comment.username}\n              </Link> {' '}\n              comment on {comment.createdAt}\n            </p>\n            <div className=\"card-body\">\n              <Link to={`/comment/${comment._id}`}>\n              <p>{comment.commentText}</p>\n              <p className=\"mb-0\">\n                Reactions: {comment.reactionCount} || Click to{' '}\n                {comment.reactionCount ? 'see' : 'start'} the discussion!\n              </p>\n              </Link>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default CommentList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FriendList = ({ friendCount, username, friends }) => {\r\n  if (!friends || !friends.length) {\r\n    return <p className=\"bg-dark text-light p-3\">{username}, meet others involved with this nonprofit!</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h5>\r\n        {username}'s {friendCount} {friendCount === 1 ? 'friend' : 'friends'}\r\n      </h5>\r\n      {friends.map(friend => (\r\n        <button className=\"btn w-100 display-block mb-2\" key={friend._id}>\r\n          <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\n\nimport CommentList from '../components/CommentList';\nimport FriendList from '../components/FriendList';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = (props) => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam }\n  });\n\n  const user = data?.me || data?.user || {};\n \n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          <CommentList comments={user.comments} title={`${user.username}'s comments...`} />\n        </div>\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={user.username}\n            friendCount={user.friendCount}\n            friends={user.friends}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  \n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form \n    const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n      // use try/catch instead of promises to handle errors\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Signup failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"text-dark\">\n      <div>\n        <h1>Our Purpose</h1>\n        <p>\n          Here at the Nonprofit Interactive Messaging Portal, or the NIM Portal, we want to help users with communications \n          and donations with nonprofit organizations.\n        </p>\n      </div>\n      <h1>Our Story</h1>\n      <p>\n        Our creators realize that nonprofit organizations are paying large amounts of money to have interactive portals \n        that allow them to communicate with their donors and future donors. This site will bridge the gap between donors and\n        account managers of nonprofit organizations.\n      </p>\n      <h1>How It All Works</h1>\n      <p>\n        Donors are able to communicate about upcoming pledges, update their contact information and even make a donation all\n        from one place. Account managers will have a running record of all communication, with any particular donor, \n        eliminating the need to create contact reports in their database.\n      </p>\n    </div>\n  );\n};\n\nexport default About;","import React from 'react';\nimport AboutComponent from \"../components/About\";\nimport BorderWrapper from \"react-border-wrapper\";\n\nconst About = () => {\n  return (\n    <BorderWrapper\n      borderColour=\"#b66d35\"\n      borderWidth=\"5px\"\n      borderRadius=\"15px\"\n      borderType=\"solid\"\n      innerPadding=\"30px\"\n      // topElement={topElement}\n      topPosition={0.05}\n      topOffset=\"22px\"\n      topGap=\"4px\"\n      // rightElement={rightElement}\n      rightPosition={0.1}\n      rightOffset=\"22px\"\n      rightGap=\"4px\"\n      >\n        <AboutComponent/>\n    </BorderWrapper>\n  );\n};\n\nexport default About;","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_COMMENTS, QUERY_ME_BASIC } from '../utils/queries';\nimport CommentList from '../components/CommentList';\nimport FriendList from '../components/FriendList';\nimport About from '../components/About';\nimport Auth from '../utils/auth';\nimport BorderWrapper from \"react-border-wrapper\";\n// import bottomElement from \"../components/Elements\";\n\nconst Home = () => {\n  // use useQuery hook to make query request\n  const { loading, data } = useQuery(QUERY_COMMENTS);\n  const { data: userData } = useQuery(QUERY_ME_BASIC);\n  const comments = data?.comments || [];\n  console.log(comments);\n\n  const loggedIn = Auth.loggedIn();\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\">\n        <div className={`col-12 mb-3 ${loggedIn && 'col-lg-8'}`}>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <div>\n              {loggedIn ? (\n                <CommentList comments = { comments } title = \"See What's Happening in Our Organization\" />\n              ): \n              <BorderWrapper\n              borderColour=\"#b66d35\"\n              borderWidth=\"5px\"\n              borderRadius=\"15px\"\n              borderType=\"solid\"\n              innerPadding=\"30px\"\n              // bottomElement={bottomElement}\n              topPosition={0.05}\n              topOffset=\"22px\"\n              topGap=\"4px\"\n              // rightElement={rightElement}\n              rightPosition={0.1}\n              rightOffset=\"22px\"\n              rightGap=\"4px\"\n              >\n                <About/>\n              </BorderWrapper>\n              } \n              \n            </div>\n          )}\n        </div>\n        {loggedIn && userData ? (\n          <div className=\"col-12 col-lg-3 mb-3\">\n            <FriendList\n              username={userData.me.username}\n              friendCount={userData.me.friendCount}\n              friends={userData.me.friends}\n            />\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n};\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport SingleComment from './pages/SingleComment';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport About from './pages/About';\n\nimport Home from './pages/Home';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<Home />}\n              />\n              <Route\n                path=\"/about\"\n                element={<About />}\n              />\n              <Route\n                path=\"/login\"\n                element={<Login />}\n              />\n              <Route\n                path=\"/signup\"\n                element={<Signup />}\n              />\n              <Route path=\"/profile\">\n                <Route path =\":username\" element={<Profile />} />\n                <Route path=\"\" element={<Profile />} />\n              </Route>\n              <Route\n                path=\"/comment:id\"\n                element={<SingleComment />}\n              />\n              <Route\n                path='*'\n                element={<NoMatch />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}